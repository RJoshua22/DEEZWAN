<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox9.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>